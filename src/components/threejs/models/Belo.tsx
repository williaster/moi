/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from 'three';
import React, { useRef } from 'react';
import { useGLTF } from '@react-three/drei';
import { GLTF } from 'three/examples/jsm/loaders/GLTFLoader';
import getStaticUrl from '../../../utils/getStaticUrl';
import { useFrame } from '@react-three/fiber';

type GLTFResult = GLTF & {
  nodes: {
    Belo: THREE.Mesh;
  };
  materials: {
    ['Material.003']: THREE.MeshPhysicalMaterial;
  };
};

const url = getStaticUrl('/static/models/Belo/belo-for-export.gltf');

export default function Belo(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF(url) as GLTFResult;
  const beloRef = useRef<THREE.Mesh>();

  // useFrame(() => {
  //   if (beloRef.current) {
  //     beloRef.current.rotation.y += 0.01;
  //   }
  // });

  return (
    <group ref={beloRef} scale={[3, 3, 3]} {...props} dispose={null}>
      <mesh
        geometry={nodes.Belo.geometry}
        position={[-0.01, 0.14, -0.11]}
        rotation={[2.98, 1, -3.02]}
        scale={[0.21, 0.21, 0.21]}
      >
        <meshStandardMaterial color={'#fff'} roughness={0.1} metalness={1} />
      </mesh>
    </group>
  );
}

useGLTF.preload(url);
