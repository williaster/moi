/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
author: plaggy (https://sketchfab.com/plaggy)
license: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
source: https://sketchfab.com/3d-models/cc0-arrow-5-f38febed165240b9aea5289c215c6b65
title: CC0 - Arrow 5
*/

import * as THREE from 'three';
import React, { useRef } from 'react';
import { useGLTF } from '@react-three/drei';
import { GLTF } from 'three/examples/jsm/loaders/GLTFLoader';
import getStaticUrl from '../../../utils/getStaticUrl';

type GLTFResult = GLTF & {
  nodes: {
    Arrow5_Arrow5_0: THREE.Mesh;
  };
  materials: {
    Arrow5: THREE.MeshStandardMaterial;
  };
};

const url = getStaticUrl('/static/models/Arrow/Arrow.gltf');
// const textureUrl = getStaticUrl('/static/models/Duck/gltf/DuckCM.png');

const scale = new THREE.Vector3(0.02, 0.04, 0.04);

export default function Arrow({
  color = '#222',
  ...props
}: JSX.IntrinsicElements['group'] & { color?: string }) {
  const group = useRef<THREE.Group>();
  const { nodes } = useGLTF(url) as GLTFResult;
  return (
    <group ref={group} {...props}>
      <group rotation={[-Math.PI / 2, 0, 0]}>
        <group rotation={[Math.PI / 2, 0, 0]}>
          <group rotation={[-Math.PI / 2, 0, 0]} scale={scale}>
            <mesh geometry={nodes.Arrow5_Arrow5_0.geometry}>
              <meshBasicMaterial attach="material" color={color} />
            </mesh>
          </group>
        </group>
      </group>
    </group>
  );
}

useGLTF.preload(url);
