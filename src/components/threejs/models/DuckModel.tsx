/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
npx gltfjsx --types model.gltf
*/

import * as THREE from 'three';
import React, { useRef } from 'react';
import { useGLTF, PerspectiveCamera, useTexture } from '@react-three/drei';
import { GLTF } from 'three/examples/jsm/loaders/GLTFLoader';
import getStaticUrl from '../../../utils/getStaticUrl';

type GLTFResult = GLTF & {
  nodes: {
    LOD3spShape: THREE.Mesh;
  };
  materials: {
    ['blinn3-fx']: THREE.MeshStandardMaterial;
  };
};

const url = getStaticUrl('/static/models/Duck/glTF/Duck.gltf');
const textureUrl = getStaticUrl('/static/models/Duck/gltf/DuckCM.png');

export default function DuckModel(props: JSX.IntrinsicElements['group']) {
  const group = useRef<THREE.Group>();
  const { nodes, materials } = useGLTF(url) as GLTFResult;
  materials['blinn3-fx'].color = new THREE.Color('#4f1124');
  return (
    <group ref={group} {...props} dispose={null}>
      <group scale={[0.01, 0.01, 0.01]}>
        <mesh geometry={nodes.LOD3spShape.geometry} material={materials['blinn3-fx']}></mesh>
      </group>
    </group>
  );
}

useGLTF.preload(url);
